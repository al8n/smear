enum AuctionStatus {
  ONGOING
  FINISHED
}

type AuctionMaker @entity {
  id: ID! # Hardcoded to Auction-maker
  auctionCount: BigInt!
  userCount: BigInt!
  bidCount: BigInt!
  finishedAuctionCount: BigInt!
}

type User @entity {
  id: ID!
  bids: [Bid!]! @derivedFrom(field: "user")
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
  modifiedAtBlock: BigInt!
  modifiedAtTimestamp: BigInt!
}

type Auction @entity {
  id: ID! # {token.id}:{token.auctionCount}
  highestBidder: User!
  token: Token!
  bidAmount: BigInt!
  rewardAmount: BigInt!
  minTTL: BigInt!
  maxTTL: BigInt!
  status: AuctionStatus!
  bids: [Bid!]! @derivedFrom(field: "auction")
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
  modifiedAtBlock: BigInt!
  modifiedAtTimestamp: BigInt!
}

type Bid @entity {
  id: ID! # tx hash
  user: User!
  token: Token!
  auction: Auction!
  amount: BigInt!
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
}

type Token @entity {
  id: ID!
  symbol: String!
  symbolSuccess: Boolean!
  auctionCount: BigInt!
  name: String!
  nameSuccess: Boolean!
  decimals: BigInt!
  decimalsSuccess: Boolean!
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
}
