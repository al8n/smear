[package]
name = "smear"
version.workspace = true
edition.workspace = true
repository.workspace = true
homepage.workspace = true
license.workspace = true
description = "Blazing fast, fully spec-compliant, reusable parser combinators for standard GraphQL and GraphQL-like DSLs."

[features]
default = ["std", "smallvec", "graphql", "graphqlx"]
alloc = ["smear-lexer/alloc", "smear-scaffold/alloc", "smear-parser/alloc"]
std = ["thiserror/default", "either/default", "bytes?/default", "bstr?/default", "hipstr?/default", "smear-lexer/std", "smear-scaffold/std", "smear-parser/std"]

unstable = ["smear-lexer/unstable", "smear-parser/unstable"]

cst = ["std", "rowan"]
graphql = ["smear-lexer/graphql", "smear-parser/graphql"]
graphqlx = ["unstable", "smear-lexer/graphqlx", "smear-parser/graphqlx"]

bytes = ["dep:bytes", "logosky/bytes", "smear-lexer/bytes", "smear-parser/bytes"]
bstr = ["dep:bstr", "logosky/bstr", "smear-lexer/bstr", "smear-parser/bstr"]
hipstr = ["dep:hipstr", "logosky/hipstr", "smear-lexer/hipstr", "smear-parser/hipstr"]
smallvec = ["dep:smallvec", "smear-lexer/smallvec", "smear-parser/smallvec"]

[dependencies]
derive_more.workspace = true
either = { version = "1", default-features = false }
paste = "1"
thiserror.workspace = true
logosky = { workspace = true, features = ["either"] }
smear-lexer.workspace = true
smear-scaffold.workspace = true
smear-parser.workspace = true

rowan = { version = "0.16", optional = true }
smallvec = { version = "1", default-features = false, features = ["const_new"], optional = true }
hipstr = { version = "0.8", default-features = false, optional = true }
bytes = { workspace = true, optional = true }
bstr = { workspace = true, optional = true }

[dev-dependencies]
criterion = "0.7"
apollo-parser = "0.8"
graphql-parser = "0.4"
async-graphql-parser = "7"
cynic-parser = "0.10"
paste = "1"


# Schema benchmarks
[[bench]]
name = "schemas"
path = "benches/schemas.rs"
harness = false

# Executable benchmarks
[[bench]]
name = "executables"
path = "benches/executables.rs"
harness = false
